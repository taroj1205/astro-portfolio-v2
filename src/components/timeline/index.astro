---
import { Image } from "astro:assets"
import { marked } from "marked"
import { generateSizesAndWidths } from "../../utils/image"
import { timelineJSON } from "./timeline"
import Markdown from "./markdown.astro"

const { lang } = Astro.props as { lang: "en" | "ja" }

timelineJSON.sort(
  (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),
)
---

<h2 class="mb-4 text-4xl font-bold">
  {lang === "ja" ? "僕の旅" : "My Journey"}
</h2>
<ol class="relative border-s border-gray-200 dark:border-gray-700">
  {
    timelineJSON.map((item, index) => (
      <li class="mb-10 ms-6">
        <span class="absolute -start-3 mt-0.5 flex h-6 w-6 items-center justify-center rounded-full bg-blue-100 ring-8 ring-white dark:bg-blue-900 dark:ring-zinc-900">
          <svg
            class="h-2.5 w-2.5 text-blue-800 dark:text-blue-300"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            viewBox="0 0 20 20"
          >
            <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
          </svg>
        </span>
        <h3 class="mb-1 flex items-center text-lg font-semibold text-gray-900 dark:text-white">
          {item.title[lang]}
          {index === timelineJSON.length - 1 && (
            <span class="me-2 ms-3 rounded bg-blue-100 px-2.5 py-0.5 text-sm font-medium text-blue-800 dark:bg-blue-900 dark:text-blue-300">
              Latest
            </span>
          )}
        </h3>
        {item.timestamp && (
          <time class="mb-2 block text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
            {item.timestamp}
          </time>
        )}
        {item.description && (
          <Markdown set:html={marked(item.description[lang].trim())} />
        )}
        {item.image && (
          <Image
            src={item.image}
            alt={item.title[lang]}
            loading="lazy"
            {...generateSizesAndWidths(item.image.width, item.image.height)}
            class="mb-4 h-auto w-full max-w-xl rounded object-cover"
          />
        )}
      </li>
    ))
  }
</ol>

---
import { Image } from "astro:assets"
import { marked } from "marked"
import { generateSizesAndWidths } from "../../utils/image"
import Container from "./container.astro"
import { timelineJSON } from "./timeline"

const { lang } = Astro.props as { lang: "en" | "ja" }

timelineJSON.sort(
  (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),
)
---

<h2>{lang === "ja" ? "僕の旅" : "My Journey"}</h2>
<div class="timeline">
	{
		timelineJSON.map((item, index) => (
			<Container dir={index % 2 === 0 ? "left" : "right"}>
				{item.timestamp && (
					<time datetime={item.timestamp}>{item.timestamp}</time>
				)}
				<h3>{item.title[lang]}</h3>
				<p set:html={marked.parse(item.description[lang].trim())} />
				{item.image && (
					<Image
						src={item.image}
						alt={item.title[lang]}
						loading="lazy"
						{...generateSizesAndWidths(item.image.width, item.image.height)}
					/>
				)}
			</Container>
		))
	}
</div>

<style is:global>
	:root {
		--darker-bg: hsl(210, 33%, 93%);
		--label-bg: hsla(209, 95%, 58%, 0.9);
	}

	@media (prefers-color-scheme: dark) {
		:root {
			--darker-bg: hsl(0, 0%, 15%);
			--label-bg: hsla(209, 100%, 31%, 0.9);
		}
	}

	.timeline {
		position: relative;
		margin: 0 auto;
		width: min(50rem, 90vw);
		gap: 1rem;
		display: grid;
	}

	.timeline h3 {
		font-size: 1.5rem;
	}

	.timeline img {
		width: 100%;
		height: auto;
		border-radius: 0.5rem;
		object-fit: cover;
		position: relative;
		bottom: -0.2rem;
	}

	.timeline time {
		position: absolute;
		top: -0.7rem;
		left: 0.5rem;
		z-index: 1;
		background-color: var(--label-bg);
		padding-inline: 0.7rem;
		padding-block: 0.25rem;
		border-radius: 0.5rem;
		color: white;
	}

	.timeline::after {
		content: "";
		position: absolute;
		width: 6px;
		background-color: var(--darker-bg);
		top: 0;
		bottom: 0;
		left: 50%;
		margin-left: -3px;
		z-index: -1;
	}

	.container {
		position: relative;
		background-color: inherit;
		width: 50%;
		text-wrap: pretty;
	}

	.container::before,
	.container::after {
		content: "";
		position: absolute;
	}

	.container::before {
		height: 0;
		width: 0;
		z-index: 1;
		top: 1rem;
		border: medium solid var(--darker-bg);
	}

	.container::after {
		width: 17px;
		height: 17px;
		right: 0;
		background-color: white;
		border: 4px solid #ff9f55;
		top: 0.9rem;
		border-radius: 50%;
	}

	.left::after {
		transform: translateX(calc(50% + 35px));
	}

	.right::after {
		transform: translateX(15%);
	}

	.left {
		left: 0;
		transform: translateX(-35px);
	}

	.right {
		left: 50%;
		padding-left: 35px;
	}

	.left::before {
		right: 0;
		transform: translateX(10px);
		border-width: 10px 0 10px 10px;
		border-color: transparent transparent transparent var(--darker-bg);
	}

	.right::before {
		left: 25px;
		border-width: 10px 10px 10px 0;
		border-color: transparent var(--darker-bg) transparent transparent;
	}

	.right::after {
		left: -16px;
	}

	.content {
		padding: 20px 30px;
		background-color: var(--darker-bg);
		position: relative;
		border-radius: 6px;
	}

	.content:has(img) {
		padding-bottom: 0px;
		padding-inline: 0;
	}

	.content:has(img) > p,
	.content:has(img) > h3 {
		padding-bottom: 0px;
		padding-inline: 30px;
	}

	@container (max-width: 850px) {
		.timeline {
			gap: 1.5rem;
		}

		.timeline::after {
			left: 0;
		}

		.container {
			width: 100%;
			padding-left: 0;
		}

		.left::before {
			left: 25px;
			border-width: 10px 10px 10px 0;
			border-color: transparent var(--darker-bg) transparent transparent;
			transform: translateX(0);
		}

		.left::after {
			transform: translateX(15%);
			left: -16px;
		}

		.right {
			left: 0;
		}

		.left {
			transform: translateX(0);
		}

		.content:has(img) > p,
		.content:has(img) > h3,
		.content:not(:has(img)) {
			padding-inline: 20px;
		}

		.content {
			left: 35px;
			width: calc(100% - 70px);
		}

		.content:has(img) {
			width: calc(100% - 30px);
		}
	}

	@container (max-width: 400px) {
		.content {
			padding-block: 15px;
		}
	}
</style>

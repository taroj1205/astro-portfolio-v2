---
import { cn } from "utils/cn.astro"
import type { Locales } from "../../../i18n/ui"
import BlogIcon from "../../../icons/blog.astro"
import CubesIcon from "../../../icons/cubes.astro"
import DropboxIcon from "../../../icons/dropbox.astro"
import DropdownContent from "./dropdown-content.astro"
import { titles } from "./items"
const { lang } = Astro.props as { lang: Locales }
---

<form class="hidden place-items-center sm:grid">
  <ul class="flex items-center justify-between gap-2">
    {
      titles.map((title) => (
        <li class="group relative flex place-items-center text-nowrap">
          <input
            type="radio"
            id={title[lang].toLowerCase()}
            name="dropdown"
            class="peer sr-only"
          />
          <label
            for={title[lang].toLowerCase()}
            class={cn(
              "text-md flex w-full min-w-fit cursor-pointer items-center justify-start gap-2 rounded-md px-4 py-2 font-semibold text-gray-700",
              "transition-colors duration-300 hover:bg-blue-300 hover:text-gray-700 peer-checked:bg-blue-300 peer-checked:text-black",
              "peer-checked:hover:bg-blue-300 dark:text-gray-300 dark:hover:bg-sky-900 dark:hover:text-gray-300",
              "peer-checked:dark:bg-zinc-800 peer-checked:dark:text-white dark:peer-checked:hover:bg-sky-900",
            )}
          >
            {title["en"] === "Blog" ? (
              <BlogIcon size="1rem" class:list={["min-w-4"]} />
            ) : title["en"] === "Apps" ? (
              <CubesIcon size="1rem" class:list={["min-w-4"]} />
            ) : (
              <DropboxIcon size="1rem" class:list={["min-w-4"]} />
            )}
            {title[lang]}
            <div
              class={cn(
                "relative h-2 w-2 rotate-90 scale-[0.7]",
                "before:absolute before:h-[2px] before:w-[10px] before:-translate-y-[3px] before:rotate-45 before:bg-gray-700 before:dark:bg-gray-300",
                "after:absolute after:h-[2px] after:w-[10px] after:translate-y-[3px] after:-rotate-45 after:bg-gray-700 after:dark:bg-gray-300",
                "before:transition-colors before:duration-300",
                "before:group-has-[input:checked]:bg-black before:dark:group-has-[input:checked]:bg-white",
                "after:group-has-[input:checked]:bg-black after:dark:group-has-[input:checked]:bg-white",
              )}
            />
          </label>
          <div class="absolute bottom-0 left-0 right-0 top-12 z-10 hidden h-fit w-fit space-y-2 rounded-md bg-white p-2 peer-checked:block dark:bg-black">
            <DropdownContent lang={lang} section={title.en.toLowerCase()} />
          </div>
        </li>
      ))
    }
  </ul>
  <input type="radio" id="close" class="peer sr-only" name="dropdown" checked />
  <label
    for="close"
    class="fixed left-0 top-0 -z-10 h-svh w-full bg-black/[.5] backdrop-blur-sm backdrop-filter transition-colors duration-300 peer-checked:hidden peer-checked:bg-white"
  ></label>
</form>
